Changes to the xv6 Kernel
=========================

lseek() system call
-------------------
This is a major Unix system call and is used by many programs
and libraries, e.g. stdio.

Files affected (lines):
	syscall.c (2), sysfile.c (60), file.h (4), syscall.h (1)

ioctl() system call
-------------------
I've added ioctl() only to support tcgetattr() and tcsetattr()
on the console device, with recognised flags ECHO and ICANON.
This is to allow programs to put the console into raw mode, which
is needed by curses and editline. I agree that ioctl() is an
abomination, so alternatively tcgetattr() and tcsetattr() could
be made into system calls.

Files affected (lines):
	console.c (40), syscall.c (2), sysfile.c (16), file.h (1),
	syscall.h (1)

time() system call and mtime in inodes
--------------------------------------
This is crucial to programs like make, and users like to see
timestamps on their files when they run ls.

Files affected (lines):
	lapic.c(40), fs.c (6), main.c (1), syscall.c (2),
	defs,h (1), file.h (1), fs.h (1), stat.h (1), syscall.h (1)

exit() and wait() exchange values
---------------------------------
This is crucial to programs like make and the change was minor.

Files affected (lines):
	proc.c (7), sysproc.c (4), trap.c (2), defs,h (2),
	proc.h (1)

Arbitrary filesystem block size
-------------------------------
The code is set up to have arbitrary filesystem block sizes but
the wrong ATA commands were being sent to the hardware. The fix
was minor.

Files affected (lines):
	ide.c (4), fs.h (1)

Larger process stack size
-------------------------
A one-page stack is too small for some BSD processes. I've changed
exec.c to create a stack of USTACKPAGES pages, defined to be four
pages, of which three are usable and one is the guard page.

Files affected (lines):
	exec.c (4), param.h (1)

Kernel returns errno values now
-------------------------------
Rather than always returning -1 from the kernel, the kernel
now returns several negative numbers. The sycall code then
negates these, sets errno and returns -1.

Files affected (lines):
	Several kernel files (42), usys.S (6)

open(2) has O_APPEND
--------------------
The open(2) syscall can now do O_APPEND.

Files affected (lines):
	sh.c (1), sysfile.c (2), fcntl.h (1)

open(2) has O_TRUNC
-------------------
The open(2) syscall can now do O_TRUNC.

Files affected (lines):
	sh.c (1), sysfile.c (9), fcntl.h (1), fs.c (1)

fchdir system call
------------------
The fchdir(2) syscall was added, just a small change.

Files affected (lines):
	syscall.c (2), sysfile.c(8), syscall.h (1), usys.S (1)

Separation of CGA and Serial Devices
------------------------------------
The CGA console device /dev/console and the serial device
(now /dev/serial) have been separated. This allows two people
to use the system at the same time.

Files affected (lines):
	init.c (23), defs.h (1), console.c (54), kbd.c (2)

Addition of raw disk read/write functionality
---------------------------------------------
/dev/disk0 and /dev/disk1 have been created, so that processes
can read and write raw disk device files

Files affected (lines):
	file.h (3), console.c (2), fs.c (2), ide.c (50), init.c (6)

/dev/null and /dev/zero
-----------------------
Every Unix needs a /dev/null!

Files affected (lines):
	init.c (6), file.h (1), ide.c (20)

	
Userland xv6 Changes
====================

+ The layout of the source code has been rearranged to have files
  grouped into kernel, commands, libraries, include files etc.
+ mkfs is now more generic, and it clones an existing directory
  and subdirectories into the filesystem image
+ init now lives in /etc and calls /bin/sh
+ sh now looks in /bin for executables
+ xv6 include files have been modified to have the defines
  and struct changes to implement all the above changes
