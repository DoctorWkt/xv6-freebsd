xv-minix2 FAQ
-------------

1. How do I compile it?
   Hopefully, on an x86 Linux or FreeBSD environment you can say 'make'. That's
   after you have done git clone https://github.com/DoctorWkt/xv6-minix2

2. How do I run it?
   Make sure that you have qemu installed and the qemu-system-i386 binary
   exists. Then run 'make qemu' to build the kernel, commands, filesystem
   and launch qemu to boot the system.

3. Structure of the source code?
   boot/  holds the bootstrap
   kern/  holds the xv6 kernel code. We want this as untouched as possible
   tools/ holds mkfs
   doc/   holds the scripts to convert the kernel code into printed format
   misc/  holds stuff from xv6 which doesn't belong anywhere in particular
   include/ holds the FreeBSD header files. Same structure as FreeBSD.
   lib/   holds the library source. I've tried to retain the FreeBSD layout.
          There is an xv6/ directory with the xv6-specific code.
   cmd/   holds the commands. The old/ directory has the original xv6 programs.
	  The simple/ directory holds one-file programs. The other directories
	  will hold the code for multi-file programs.
   fs/    is a temporary staging area for the filesystem

4. What's with all the CFLAGS?
   I've kept most of the CFLAGS from the original xv6 Makefile; I'm not sure
   if we need all of them.

5. Do you specifically want FreeBSD 1.1.5.1 code?
   I'm not wedded to FreeBSD code. It is covered under a BSD license and the
   functions are reasonably small. I don't mind where code comes from as long
   as it's small and is covered by a BSD or MIT-compatible license.
